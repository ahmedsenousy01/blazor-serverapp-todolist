@page "/register"
@inject UserService userService
@inject NavigationManager NavigationManager

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">Register</div>
                <div class="card-body">
                    <EditForm Model="@data" OnValidSubmit="HandleValidSubmit">
                        <div class="form-group">
                            <label for="username">Username:</label>
                            <InputText id="username" class="form-control" @bind-Value="data.UserName" />
                            <ValidationMessage For="@(() => data.UserName)" />
                        </div>
                        <div class="form-group">
                            <label for="password">Password:</label>
                            <input type="password" id="password" class="form-control" @bind="data.Password" />
                            <ValidationMessage For="@(() => data.Password)" />
                        </div>
                        <div class="form-group">
                            <label for="role">Role:</label>
                            <InputSelect id="role" class="form-control" @bind-Value="data.Role">
                                <option value="Admin">Admin</option>
                                <option value="User">User</option>
                            </InputSelect>
                            <ValidationMessage For="@(() => data.Role)" />
                        </div>
                        <button type="submit" class="btn btn-primary btn-block">Register</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private class FormData
    {
        public string UserName { get; set; }
        public string Password { get; set; }
        public string Role { get; set; }
    }
    private FormData data = new FormData() { Role = "Admin" };

    private async Task HandleValidSubmit()
    {
        var user = new User
            {
                UserName = data.UserName,
                PasswordHash = HashingService.HashPassword(data.Password),
                RoleId = data.Role == "Admin" ? 1 : 2,
            };

        await userService.CreateAsync(user);
        NavigationManager.NavigateTo("/login");
    }
}
